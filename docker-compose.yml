services:
  #your-app-service:
   # image: your-app-image
    #ports:
     # - "3000:3000"
  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - monitoring
      
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - monitoring
    environment:
      - ZOO_ENABLE_AUTH=yes
      - ALLOW_ANONYMOUS_LOGIN=yes
  k6:
    image: grafana/k6
    volumes:
      - type: bind
        source: ./load-testing
        target: /load-testing
    entrypoint: ["k6", "run", "--out", "experimental-prometheus-rw=http://prometheus:9090", "/load-testing/load-test-wp.js"]
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    ports:
      - "9000:9000"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-remote-write-receiver"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - monitoring

  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=MyInitialAdminPassword
      - DOCKER_INFLUXDB_INIT_ORG=docs
      - DOCKER_INFLUXDB_INIT_BUCKET=home
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=MyInitialAdminToken0==
    networks:
      - monitoring
### Data InfluxDB
#    volumes:
#      - type: volume
#        source: influxdb2-data
#        target: /var/lib/influxdb2
#      - type: volume
#        source: influxdb2-config
#        target: /etc/influxdb2
###################################    

#volumes:
#  influxdb2-data:
#  influxdb2-config:
####################
networks:
  monitoring:
    driver: bridge
    